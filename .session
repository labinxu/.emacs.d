;;; Automatically generated on Tue Jan 13 15:31:45 2015
;;; Invoked by cninlaxu@CNCHPC3064 using 25.0.50.1
(setq-default session-file-alist '(("~/workspace/cocos2ddemo/MyCppGame/Classes/splashscreen.h" 204 282 1 nil nil 292 (overwrite-mode)) ("~/workspace/cocos2ddemo/MyCppGame/Classes/splashscreen.cpp" 398 635 1 nil nil 862 (overwrite-mode)) ("~/workspace/cocos2ddemo/MyCppGame/Classes/HelloWorldScene.cpp" 309 325 1 nil nil 449 (overwrite-mode)) ("~/workspace/cocos2ddemo/MyCppGame/Classes/HelloWorldScene.h" 155 148 1 nil nil 263 (overwrite-mode)) ("~/workspace/cocos2ddemo/MyCppGame/Classes/AppDelegate.cpp" 645 706 1 nil nil 79 (overwrite-mode)) ("~/workspace/cocos2ddemo/MyCppGame/proj.android/jni/Android.mk" 534 54 1 nil nil 534 (overwrite-mode)) ("~/workspace/cocos2ddemo/MyCppGame/Classes/SplashScene.h" 514 78 1 nil nil 107 (overwrite-mode)) ("~/workspace/cocos2ddemo/MyCppGame/Classes/SplashScene.cpp" 762 3340 1 nil nil 3302 (overwrite-mode)) ("~/dsimple/MyCppGame/Classes/splashscreen.cpp" 316 310 1 nil nil 316 (overwrite-mode)) ("~/dsimple/MyCppGame/Classes/splashscreen.h" 172 178 1 nil nil 178 (overwrite-mode)) ("~/dsimple/MyCppGame/Classes/AppDelegate.cpp" 811 692 1 nil nil 687 (overwrite-mode)) ("~/dsimple/MyCppGame/Classes/HelloWorldScene.h" 262 238 1 nil nil 402 (overwrite-mode)) ("~/dsimple/MyCppGame/Classes/HelloWorldScene.cpp" 551 349 1 nil nil 420 (overwrite-mode)) ("~/dsimple/MyCppGame/proj.android/jni/Android.mk" 300 424 1 nil nil 482 (overwrite-mode)) ("~/dsimple/MyCppGame/proj.android/AndroidManifest.xml" 561 527 1 nil nil 289 (overwrite-mode)) ("~/workspace/FCA_DOORS_PROJ/extracter.py" 665 728 1 nil nil 636 (overwrite-mode)) ("~/workspace/pygamedemo.py" 1 1 1 nil nil 1 (overwrite-mode)) ("~/workspace/test_shelve.py" 158 311 1 nil nil 713 (overwrite-mode)) ("c:/Windows/System32/drivers/etc/hosts" 871 865 1 nil nil 833 (overwrite-mode)) ("~/workspace/cpp/hello.cpp" 238 203 1 nil nil 238 (overwrite-mode)) ("~/Desktop/yapas/yapas/y" 18349 18979 1 nil nil 102575 (overwrite-mode)) ("~/Desktop/yapas/yapas/build_wrapper/yapas.py" 193 225 1 nil nil nil (overwrite-mode)) ("~/workspace/geniusbar-reserver/gui/mainwindow_split.py" 20442 20011 1 nil nil 12272 (overwrite-mode)) ("~/.emacs.d/confs/semantic-conf.el" 22 nil 1 nil nil 22 (overwrite-mode)) ("~/workspace/geniusbar-reserver/sites/apple_main.py" 14324 13787 1 nil nil 16316 (overwrite-mode)) ("~/workspace/geniusbar-reserver/gui/tablewidget.py" 148 386 1 nil nil 822 (overwrite-mode)) ("~/workspace/geniusbar-reserver/geniusbar.py" 865 594 1 nil nil 682 (overwrite-mode)) ("~/workspace/geniusbar-reserver/gui/taskmanagedlg.py" 1183 1650 1 nil nil 5803 (overwrite-mode)) ("~/workspace/geniusbar-reserver/sites/apple_genius_bar/task.py" 491 991 1 nil nil 491 (overwrite-mode)) ("~/workspace/geniusbar-reserver/proxy/proxyfinder.py" 3020 3260 1 nil nil 3282 (overwrite-mode)) ("~/workspace/geniusbar-reserver/gui/accountmanagedlg.py" 1433 1187 1 nil nil 1433 (overwrite-mode)) ("~/workspace/geniusbar-reserver/utils/webpage.py" 2965 2706 1 nil nil 2792 (overwrite-mode)) ("~/workspace/geniusbar-reserver/gui/uidesigner/taskviewwidget.py" 539 889 1 nil nil 827 (overwrite-mode)) ("~/.emacs.d/confs/cpp-conf.el" 1229 nil 1 nil nil 3738 (overwrite-mode)) ("~/workspace/geniusbar-reserver/gui/proxymanagerdlg.py" 3257 1308 1 nil nil 3257 (overwrite-mode)) ("~/workspace/geniusbar-reserver/test/test_proxy.py" 48 64 1 nil nil 1033 (overwrite-mode))))
(setq-default file-name-history '("~/workspace/cocos2ddemo/MyCppGame/Classes/splashscreen.h" "~/workspace/cocos2ddemo/MyCppGame/Classes/splashscreen.cpp" "~/.emacs.d/confs/recentf-conf.el" "~/workspace/cocos2ddemo/MyCppGame/cocos2d/cocos/base/CCConsole.h" "~/workspace/cocos2ddemo/MyCppGame/cocos2d/cocos/base/CCConsole.cpp" "~/workspace/cocos2ddemo/MyCppGame/Classes/splashsc.h" "~/workspace/cocos2ddemo/MyCppGame/cocos2d/cocos/base/CCPlatformMacros.h" "~/workspace/cocos2ddemo/MyCppGame/" "~/workspace/cocos2ddemo/MyCppGame/Classes/HelloWorldScene.h" "~/workspace/cocos2ddemo/MyCppGame/Classes/SplashScene.h" "~/workspace/cocos2ddemo/MyCppGame/Classes/SplashScene.cpp" "~/workspace/cocos2ddemo/MyCppGame/Classes/AppDelegate.cpp" "~/workspace/cocos2ddemo/MyCppGame/proj.android/jni/Android.mk" "~/workspace/cocos2ddemo/MyCppGame/Classes/HelloWorldScene.cpp" "~/dsimple/MyCppGame/Classes/HelloWorldScene.h" "~/dsimple/MyCppGame/proj.android/project.properties" "~/dsimple/MyCppGame/Classes/HelloWorldScene.cpp" "~/dsimple/MyCppGame/proj.android/AndroidManifest.xml" "~/dsimple/MyCppGame/proj.android/jni/Application.mk" "~/dsimple/MyCppGame/proj.android/jni/Android.mk" "~/dsimple/MyCppGame/Classes/splashscreen.h" "~/dsimple/MyCppGame/Classes/AppDelegate.cpp" "~/dsimple/MyCppGame/proj.android/jni/hellocpp/main.cpp" "~/dsimple/MyCppGame/Classes/splashscreen.cpp" "~/workspace/FCA_DOORS_PROJ/extracter.py" "~/workspace/pygamedemo.py" "~/workspace/test_shelve.py" "~/workspace/" "c:/Windows/System32/drivers/etc/hosts" "~/workspace/cpp/hello.cpp" "~/Desktop/yapas/yapas/y" "~/Desktop/yapas/yapas/build_wrapper/yapas.py" "~/.emacs.d/confs/semantic-conf.el" "~/workspace/geniusbar-reserver/gui/proxymanagerdlg.py" "~/workspace/geniusbar-reserver/gui/mainwindow_split.py" "~/workspace/geniusbar-reserver/sites/apple_main.py" "~/workspace/geniusbar-reserver/gui/tablewidget.py" "~/workspace/geniusbar-reserver/gui/uidesigner/ui_mainwindow_splitter.py" "~/workspace/geniusbar-reserver/gui/interface.py" "~/workspace/geniusbar-reserver/gui/taskmanagedlg.py" "~/workspace/geniusbar-reserver/sites/apple_genius_bar/task.py" "~/workspace/geniusbar-reserver/utils/webpage.py" "~/workspace/geniusbar-reserver/gui/accountmanagedlg.py" "~/workspace/geniusbar-reserver/gui/uidesigner/taskviewwidget.py" "~/workspace/geniusbar-reserver/geniusbar.py" "~/workspace/geniusbar-reserver/proxy/proxyfinder.py" "~/.emacs.d/confs/cpp-conf.el" "~/workspace/geniusbar-reserver/test/test_proxy.py" "~/workspace/geniusbar-reserver/gui/newtaskdlg.py" "~/.emacs.d/resource/.recentf" "~/workspace/geniusbar-reserver/gui/accountlistdlg.py" "~/.emacs.d/confs/helm-ag-conf.el" "~/.emacs.d/confs/emacs-window-conf.el" "~/.emacs.d/confs/helm-conf.el" "c:/apps/emacs/share/emacs/25.0.50/lisp/cedet/semantic.el.gz" "~/.emacs.d/init.el" "~/.emacs.d/confs/python-conf.el" "~/workspace/geniusbar-reserver/test/test_timeslotpage.py" "~/.emacs.d/confs/company-conf.el" "~/.emacs.d/confs/base.el" "~/.emacs.d/confs/irony-mode-conf.el" "~/workspace/geniusbar-reserver/test/unitest.py" "~/workspace/geniusbar-reserver/.gitignore" "~/workspace/geniusbar-reserver/utils/__init__.py" "~/workspace/geniusbar-reserver/gui/uidesigner/tasktablewidget.py" "~/workspace/geniusbar-reserver/sites/apple_genius_bar/confhelper.py" "~/workspace/geniusbar-reserver/sites/apple_genius_bar/account.py" "~/workspace/geniusbar-reserver/gui/uidesigner/ui_taskmanagedlg.py" "~/.emacs.d/modules/elpy/elpy.el" "c:/apps/Python27/Lib/urllib2.py" "~/workspace/geniusbar-reserver/sites/apple_genius_bar/store_page.py" "~/workspace/geniusbar-reserver/gui/uidesigner/ui_mainwindow.py" "~/workspace/geniusbar-reserver/gui/mainwindow.py" "~/workspace/geniusbar-reserver/test/test_str.py" "~/workspace/geniusbar-reserver/test/test_browser.py" "c:/apps/Python27/Lib/multiprocessing/__init__.py" "~/workspace/geniusbar-reserver/test/test_json.py" "~/workspace/geniusbar-reserver/gui/taskdlg.py" "~/workspace/geniusbar-reserver/gui/pyuic.bat" "~/workspace/geniusbar-reserver/test/mainwindow_style3.py" "~/workspace/geniusbar-reserver/test/mainwindow_style1.py" "~/workspace/geniusbar-reserver/test/mainwindow_style2.py" "~/workspace/geniusbar-reserver/gui/widgetitem.py" "~/workspace/geniusbar-reserver/test/delegate.py" "~/workspace/geniusbar-reserver/setup.py" "~/workspace/geniusbar-reserver/test/mywidget.py" "~/workspace/geniusbar-reserver/test/test_smschalleng_page.py" "~/workspace/geniusbar-reserver/gui/addaccountdlg.py" "~/workspace/geniusbar-reserver/test/test_genius_bar_class.py"))
(setq-default c-set-style-history '("google"))
(setq-default command-history '((execute-extended-command nil "smart-insert-operator") (tabbar-mode (quote toggle)) (semantic-mode (quote toggle)) (execute-extended-command nil "tabbar-mode") (helm-recentf) (recentf-cleanup) (describe-function (quote recentf-cleanup)) (execute-extended-command nil "recentf-cleanup") (desktop-clear) (execute-extended-command nil "desktop-clear") (recentf-edit-list)))
(setq-default compile-history '("make"))
(setq-default extended-command-history '("smart-insert-operator" "tabbar-mode" "semantic-mode" "helm-recentf" "recentf-cleanup" "desktop-clear" "recentf-edit-list" "comment-region" "irony-cdb-menu" "irony-completion-at-point-async" "global-company-mode" "company-mode" "elpy-mode" "compile" "shell" "helm-imenu" "winner-mode"))
(setq-default helm-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (cl-loop for i in command-history unless \.\.\. collect \.\.\.)) (type . sexp)))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Add marked files to file-cache" . helm-ff-cache-add-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-c-source-global-mark-ring '((name . "global-mark-ring") (candidates . helm-global-mark-ring-get-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (let \.\.\. \.\.\. \.\.\. \.\.\.)) (persistent-help . "Show this line")))
(setq-default helm-c-source-kill-ring '((name . "Kill Ring") (init lambda nil (helm-attrset \.\.\. last-command)) (candidates . helm-kill-ring-candidates) (filtered-candidate-transformer helm-kill-ring-transformer) (action ("Yank" . helm-kill-ring-action) ("Delete" lambda \.\.\. \.\.\.)) (persistent-action lambda (_candidate) (ignore)) (persistent-help . "DoNothing") (keymap keymap (27 keymap \.\.\. \.\.\.) keymap (94 . helm-swoop-caret-match) (tab . helm-execute-persistent-action) (f13 lambda nil \.\.\. \.\.\.) (f12 lambda nil \.\.\. \.\.\.) (f11 lambda nil \.\.\. \.\.\.) (f10 lambda nil \.\.\. \.\.\.) (f9 lambda nil \.\.\. \.\.\.) (f8 lambda nil \.\.\. \.\.\.) (f7 lambda nil \.\.\. \.\.\.) (f6 lambda nil \.\.\. \.\.\.) (f5 lambda nil \.\.\. \.\.\.) (f4 lambda nil \.\.\. \.\.\.) (f3 lambda nil \.\.\. \.\.\.) (f2 lambda nil \.\.\. \.\.\.) (menu-bar keymap \.\.\.) (help keymap \.\.\.) (f1 lambda nil \.\.\. \.\.\.) (8 keymap \.\.\. \.\.\. \.\.\. \.\.\.) (20 . helm-toggle-resplit-and-swap-windows) (C-tab . undefined) (triple-mouse-3 . ignore) (double-mouse-3 . ignore) (mouse-3 . ignore) (drag-mouse-3 . ignore) (down-mouse-3 . ignore) (triple-mouse-2 . ignore) (double-mouse-2 . ignore) (mouse-2 . ignore) (drag-mouse-2 . ignore) (down-mouse-2 . ignore) (triple-mouse-1 . ignore) (double-mouse-1 . ignore) (mouse-1 . ignore) (drag-mouse-1 . ignore) (down-mouse-1 . ignore) (67108897 . helm-toggle-suspend-update) (3 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (67108987 . helm-enlarge-window) (67108989 . helm-narrow-window) (19 . undefined) (18 . undefined) (23 . helm-yank-text-at-point) (24 keymap \.\.\. \.\.\. \.\.\.) (11 . helm-delete-minibuffer-contents) (67108896 . helm-toggle-visible-mark) (0 . helm-toggle-visible-mark) (C-M-up . helm-scroll-other-window-down) (C-M-down . helm-scroll-other-window) (M-prior . helm-scroll-other-window-down) (M-next . helm-scroll-other-window) (12 . helm-recenter-top-bottom-other-window) (15 . helm-next-source) (10 . helm-execute-persistent-action) (26 . helm-execute-persistent-action) (9 . helm-select-action) (13 . helm-maybe-exit-minibuffer) (left . helm-previous-source) (right . helm-next-source) (7 . helm-keyboard-quit) (22 . helm-next-page) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (next . helm-next-page) (prior . helm-previous-page) (C-up . helm-follow-action-backward) (C-down . helm-follow-action-forward) (16 . helm-previous-line) (14 . helm-next-line) (up . helm-previous-line) (down . helm-next-line) keymap (18 . helm-minibuffer-history) (menu-bar keymap \.\.\.) (10 . exit-minibuffer) (13 . exit-minibuffer) (7 . abort-recursive-edit) (C-tab . file-cache-minibuffer-complete) (9 . self-insert-command) (XF86Back . previous-history-element) (up . previous-history-element) (prior . previous-history-element) (XF86Forward . next-history-element) (down . next-history-element) (next . next-history-element) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.)) (last-command . yank) (migemo) (multiline)))
(setq-default helm-c-source-mark-ring '((name . "mark-ring") (candidates . helm-mark-ring-get-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (helm-goto-line \.\.\.) (helm-highlight-current-line)) (persistent-help . "Show this line")))
(setq-default helm-c-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let \.\.\. \.\.\.)) (migemo) (multiline) (action lambda (candidate) (delete-minibuffer-contents) (insert candidate))))
(setq-default helm-ff-history '("c:/Users/cninlaxu/workspace/geniusbar-reserver/test/"))
(setq-default helm-source--ff-file-name-history '((name . "File name history") (init lambda nil (with-helm-alive-p \.\.\.)) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda \.\.\. \.\.\. \.\.\.) ("Find file in helm" lambda \.\.\. \.\.\.))))
(setq-default helm-source-comint-input-ring '((name . "Comint history") (candidates lambda nil (with-helm-current-buffer \.\.\.)) (action . helm-comint-input-ring-action)))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (cl-loop for i in command-history unless \.\.\. collect \.\.\.)) (type . sexp)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Add marked files to file-cache" . helm-ff-cache-add-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-source-global-mark-ring '((name . "global-mark-ring") (candidates . helm-global-mark-ring-get-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (let \.\.\. \.\.\. \.\.\. \.\.\.)) (persistent-help . "Show this line")))
(setq-default helm-source-kill-ring '((name . "Kill Ring") (init lambda nil (helm-attrset \.\.\. last-command)) (candidates . helm-kill-ring-candidates) (filtered-candidate-transformer helm-kill-ring-transformer) (action ("Yank" . helm-kill-ring-action) ("Delete" lambda \.\.\. \.\.\.)) (persistent-action lambda (_candidate) (ignore)) (persistent-help . "DoNothing") (keymap keymap (27 keymap \.\.\. \.\.\.) keymap (94 . helm-swoop-caret-match) (tab . helm-execute-persistent-action) (f13 lambda nil \.\.\. \.\.\.) (f12 lambda nil \.\.\. \.\.\.) (f11 lambda nil \.\.\. \.\.\.) (f10 lambda nil \.\.\. \.\.\.) (f9 lambda nil \.\.\. \.\.\.) (f8 lambda nil \.\.\. \.\.\.) (f7 lambda nil \.\.\. \.\.\.) (f6 lambda nil \.\.\. \.\.\.) (f5 lambda nil \.\.\. \.\.\.) (f4 lambda nil \.\.\. \.\.\.) (f3 lambda nil \.\.\. \.\.\.) (f2 lambda nil \.\.\. \.\.\.) (menu-bar keymap \.\.\.) (help keymap \.\.\.) (f1 lambda nil \.\.\. \.\.\.) (8 keymap \.\.\. \.\.\. \.\.\. \.\.\.) (20 . helm-toggle-resplit-and-swap-windows) (C-tab . undefined) (triple-mouse-3 . ignore) (double-mouse-3 . ignore) (mouse-3 . ignore) (drag-mouse-3 . ignore) (down-mouse-3 . ignore) (triple-mouse-2 . ignore) (double-mouse-2 . ignore) (mouse-2 . ignore) (drag-mouse-2 . ignore) (down-mouse-2 . ignore) (triple-mouse-1 . ignore) (double-mouse-1 . ignore) (mouse-1 . ignore) (drag-mouse-1 . ignore) (down-mouse-1 . ignore) (67108897 . helm-toggle-suspend-update) (3 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (67108987 . helm-enlarge-window) (67108989 . helm-narrow-window) (19 . undefined) (18 . undefined) (23 . helm-yank-text-at-point) (24 keymap \.\.\. \.\.\. \.\.\.) (11 . helm-delete-minibuffer-contents) (67108896 . helm-toggle-visible-mark) (0 . helm-toggle-visible-mark) (C-M-up . helm-scroll-other-window-down) (C-M-down . helm-scroll-other-window) (M-prior . helm-scroll-other-window-down) (M-next . helm-scroll-other-window) (12 . helm-recenter-top-bottom-other-window) (15 . helm-next-source) (10 . helm-execute-persistent-action) (26 . helm-execute-persistent-action) (9 . helm-select-action) (13 . helm-maybe-exit-minibuffer) (left . helm-previous-source) (right . helm-next-source) (7 . helm-keyboard-quit) (22 . helm-next-page) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (next . helm-next-page) (prior . helm-previous-page) (C-up . helm-follow-action-backward) (C-down . helm-follow-action-forward) (16 . helm-previous-line) (14 . helm-next-line) (up . helm-previous-line) (down . helm-next-line) keymap (18 . helm-minibuffer-history) (menu-bar keymap \.\.\.) (10 . exit-minibuffer) (13 . exit-minibuffer) (7 . abort-recursive-edit) (C-tab . file-cache-minibuffer-complete) (9 . self-insert-command) (XF86Back . previous-history-element) (up . previous-history-element) (prior . previous-history-element) (XF86Forward . next-history-element) (down . next-history-element) (next . next-history-element) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.)) (last-command . yank) (migemo) (multiline)))
(setq-default helm-source-mark-ring '((name . "mark-ring") (candidates . helm-mark-ring-get-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (helm-goto-line \.\.\.) (helm-highlight-current-line)) (persistent-help . "Show this line")))
(setq-default helm-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let \.\.\. \.\.\.)) (migemo) (multiline) (action lambda (candidate) (delete-minibuffer-contents) (insert candidate))))
(setq-default minibuffer-history '("tabb" "seman" "semanti" #("setupSprites" 0 12 (face font-lock-function-name-face fontified t)) "THE" "helm-re" "re"))
(setq-default occur-collect-regexp-history '("\\1"))
